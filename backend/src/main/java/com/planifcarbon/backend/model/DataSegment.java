package com.planifcarbon.backend.model;

import org.springframework.lang.Nullable;

/**
 * {@summary Represent data of a segment generated by dijkstra.}
 */
public class DataSegment {
    private final Node nodeStart;
    private final Node nodeEnd;
    private final int arrivalTime;
    private final int departureTime;
    private final @Nullable MetroLine line;
    private final double distance;

    /** Standard constructor */
    public DataSegment(Node nodeStart, Node nodeEnd, int arrivalTime, int departureTime, @Nullable MetroLine line, double distance) {
        this.nodeStart = nodeStart;
        this.nodeEnd = nodeEnd;
        this.arrivalTime = arrivalTime;
        this.departureTime = departureTime;
        this.line = line;
        this.distance = distance;
    }

    // getters (no setters because this is a data class)
    public Node getNodeStart() { return nodeStart; }
    public Node getNodeEnd() { return nodeEnd; }
    public int getArrivalTime() { return arrivalTime; }
    public int getDepartureTime() { return departureTime; }
    public @Nullable MetroLine getLine() { return line; }
    public double getDistance() { return distance; }

    /** Standard deep equals */
    @Override
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof DataSegment))
            return false;
        DataSegment ds = (DataSegment) o;
        return ds.getNodeStart().equals(getNodeStart()) && ds.getNodeEnd().equals(this.getNodeEnd())
                && ds.getArrivalTime() == this.getArrivalTime() && ds.getDepartureTime() == this.getDepartureTime()
                && ((ds.getLine() == null && this.getLine() == null) || ds.getLine().equals(this.getLine()))
                && ds.getDistance() == this.getDistance();
    }

    /** Standard toString() */
    @Override
    public String toString() {
        return "DataSegment{" + "nodeStart=" + nodeStart + ", nodeEnd=" + nodeEnd + ", arrivalTime=" + arrivalTime + ", departureTime="
                + departureTime + ", line=" + line + ", distance=" + distance + '}';
    }
}